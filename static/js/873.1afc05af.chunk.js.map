{"version":3,"file":"static/js/873.1afc05af.chunk.js","mappings":"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","sources":["webpack://react-kabzda-2/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-kabzda-2/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://react-kabzda-2/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/formsControl/formsControl.js","utils/validator/validator.js","webpack://react-kabzda-2/./src/components/common/formsControl/formsControl.module.css?eeb5"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__6pU66\",\"dialog\":\"Dialogs_dialog__8U3tW\",\"active\":\"Dialogs_active__F8iMM\",\"messages\":\"Dialogs_messages__Aju6Z\",\"sendMessage\":\"Dialogs_sendMessage__WoeDL\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__IICay\"};","import React from \"react\";\r\nimport c from './Dialog.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Dialog = (props) =>{\r\n  return(\r\n    <div className={`${c.dialog}`}>\r\n      <img src={props.iconUser} alt=\"\" />\r\n      <NavLink to={\"/dialogs/\"+props.idUser}>{props.nameUser}</NavLink>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Message_dialog__CiGB0\"};","import React from \"react\";\r\nimport c from './Message.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Message = (props) =>{\r\n  return(\r\n    <div className={c.message}>\r\n      {props.messageText}\r\n    </div>\r\n);\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport c from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { TextArea } from \"../common/formsControl/formsControl\";\r\nimport { maxLengthCreator, required } from \"../../utils/validator/validator\";\r\n\r\nconst Dialogs = (props) =>{\r\n   \r\n   let dialogsElements=props.state.dialogsData.map((i)=><Dialog nameUser={i.name} idUser={i.id} key={i.id} iconUser={i.icon}/>);\r\n   let messagesElement = props.state.messagesData.map((el)=><Message key={el.id} messageText={el.messageText}/>);\r\n   //let sendMessageEl = React.createRef()\r\n   let sendMessage = (formData)=>{\r\n      console.log(formData.inputMessage);\r\n      props.sendMessage(formData.inputMessage)\r\n      \r\n      \r\n   }\r\n   /*\r\n   let changeMessageInput =()=>{\r\n    \r\n    props.changeMessageInput(sendMessageEl.current.value)\r\n    \r\n    \r\n   }\r\n   */\r\n    return(\r\n      \r\n      <div className={c.dialogs}>\r\n        <div className={c.dialogs__items}>\r\n          {dialogsElements}</div>\r\n       <div className={c.messages}>\r\n        {messagesElement}\r\n        <div className={c.sendMessage}>\r\n          <DialogsReduxForm onSubmit={sendMessage}/>\r\n        </div>\r\n        \r\n       </div>\r\n      </div>\r\n        \r\n    );\r\n}\r\nconst  DialogsForm = (props) =>{\r\n  // <textarea onChange={changeMessageInput} ref={sendMessageEl} value={props.state.newMessageText}></textarea>\r\n   return(\r\n       <form onSubmit={props.handleSubmit} >\r\n        <div>\r\n          <Field name=\"inputMessage\"  component={TextArea} validate={[required,maxLengthCreator(70)]}/>\r\n        </div>\r\n         <button >Send</button>\r\n       </form>\r\n       \r\n   );\r\n}\r\nconst DialogsReduxForm=reduxForm({form:\"dialogs\"})(DialogsForm);\r\nexport default Dialogs;","import React from \"react\";\r\nimport c from './Dialogs.module.css';\r\nimport { addMessageActionCreator, changeMessageInputActionCreator } from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return{\r\n     state: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  \r\n  return{\r\n    sendMessage:(text)=>{\r\n      dispatch(addMessageActionCreator(text))\r\n      \r\n    },\r\n   \r\n  }\r\n} \r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport c from './formsControl.module.css'\r\nimport { Field } from \"redux-form\";\r\n\r\n\r\n/*\r\n\r\nexport const FormController=({input,meta,child,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={c.form小ontrol+' '+ (hasError && c.error)}>\r\n                <div> \r\n                    <props.element {...input} {...props}/>\r\n                </div>\r\n                {hasError&& <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const TextArea=({...props})=>{\r\n    return <FormController {...props} element=\"textarea\"></FormController>\r\n}\r\nexport const Input=({meta,...props})=>{\r\n    return <FormController {...props} element=\"input\"></FormController>\r\n}\r\n*/\r\n\r\nexport const TextArea=({input,meta,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={c.form小ontrol+' '+ (hasError && c.error)}>\r\n                <div>\r\n                    <textarea {...input} {...props}/>   \r\n                </div>\r\n                {hasError&& <span>{meta.error}</span>}\r\n    </div>\r\n}\r\nexport const Input=({input,meta,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={c.form小ontrol+' '+ (hasError && c.error)}>\r\n                <div>\r\n                    <input {...input} {...props}/>   \r\n                </div>\r\n                {hasError&& <span>{meta.error}</span>}\r\n    </div>\r\n}\r\nexport const CreateForm=(name,placeholder,component,validate,props={},text='')=><div>\r\n    <Field name={name} placeholder={placeholder}\r\n     component={component} validate={validate} {...props} />{text}\r\n</div>\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const required= value =>{\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n/*\r\nexport const maxLength30=value=>{\r\n    if(value&& value.length>30) return \"Max simvol 30\";\r\n    return undefined\r\n}\r\n*/\r\nexport const maxLengthCreator=(maxLength)=>(value)=>{\r\n    if(value&& value.length>maxLength) return `Max symbol ${maxLength}`;\r\n    return undefined\r\n}\r\nexport const minLengthCreator=(minLength)=>(value)=>{\r\n    if(value&& value.length<minLength) return `Min symbol ${minLength}`;\r\n    return undefined\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"formsControl_formControl__8tjrF\",\"form小ontrol\":\"formsControl_form小ontrol__HovIe\",\"error\":\"formsControl_error__aNckz\",\"formErrorDiv\":\"formsControl_formErrorDiv__V0-P4\"};"],"names":["props","_jsxs","className","concat","c","children","_jsx","src","iconUser","alt","NavLink","to","idUser","nameUser","message","messageText","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","TextArea","validate","required","maxLengthCreator","dialogsElements","state","dialogsData","map","i","Dialog","id","icon","messagesElement","messagesData","el","Message","dialogs","dialogs__items","messages","sendMessage","formData","console","log","inputMessage","compose","connect","dialogsPage","dispatch","text","addMessageActionCreator","withAuthRedirect","Dialogs","_ref","input","meta","hasError","touched","error","form小ontrol","Input","_ref2","CreateForm","placeholder","arguments","length","undefined","value","maxLength","minLengthCreator","minLength"],"sourceRoot":""}