{"version":3,"file":"static/js/989.cad820e5.chunk.js","mappings":"2JACA,QAA0B,yBCA1B,EAAoC,uC,oDCEpC,MAAMA,UAAsBC,EAAAA,UAAeC,WAAAA,GAAA,SAAAC,WAEvC,KACAC,MAAM,CACFC,UAAS,EACTC,OAAOC,KAAKC,MAAMF,OACrB,CACDG,YAAAA,GAEEF,KAAKG,SAAS,CACZL,UAAS,GAEb,CACAM,cAAAA,GAEIJ,KAAKG,SAAS,CACZL,UAAS,IAEXE,KAAKC,MAAMI,eAAeL,KAAKH,MAAME,OACvC,CACAO,cAAAA,CAAeC,GACb,IAAIC,EAAOD,EAAEE,cAAcC,MAC3BV,KAAKG,SAAS,CACVJ,OAAOS,GAIb,CACFG,kBAAAA,CAAmBC,EAAUC,GACtBD,EAAUb,SAAWC,KAAKC,MAAMF,QAC/BC,KAAKG,SAAS,CACVJ,OAAOC,KAAKC,MAAMF,QAI9B,CACAe,MAAAA,GACI,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SACLhB,KAAKH,MAAMC,UAGZiB,EAAAA,EAAAA,KAAA,SAAOE,WAAS,EAAEC,SAAUlB,KAAKM,eAAea,KAAKnB,MAAOoB,OAAQpB,KAAKI,eAAee,KAAKnB,MAAOU,MAAOV,KAAKH,MAAME,OAAQsB,KAAK,UAH7GN,EAAAA,EAAAA,KAAA,QAAMO,cAAetB,KAAKE,aAAaiB,KAAKnB,MAAMgB,SAAEhB,KAAKC,MAAMF,OAAOC,KAAKC,MAAMF,OAAO,qFAMnH,GASkBwB,EAAAA,EAAAA,GAAU,CAACC,KAAK,cAAhBD,EANAtB,IAEdc,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACR,WAAS,EAACG,OAAQnB,EAAMG,eAC9BsB,KAAM,cAAeC,UAAW,YAHzC,MAOA,I,yBC7CeC,EAAAA,EAAAA,KAPM/B,IACZ,CACLE,OAAOF,EAAMgC,YAAYC,cAKU,CACrCC,iBAAgB,MADlB,CACqBtC,GADrB,MCwBA,EAjC+BQ,IAI3B,IAAKH,EAASkC,IAAaC,EAAAA,EAAAA,WAAS,IAC/BlC,EAAOmC,IAAWD,EAAAA,EAAAA,UAAShC,EAAMF,SACtCoC,EAAAA,EAAAA,YAAU,KACRD,EAAUjC,EAAMF,OAAO,GACvB,CAACE,EAAMF,SAYL,OAAOgB,EAAAA,EAAAA,KAAA,OAAAC,SACJlB,GAKFiB,EAAAA,EAAAA,KAAA,SAAOE,WAAS,EAACC,SAVAX,IACpB2B,EAAU3B,EAAEE,cAAcC,MAAM,EAScU,OAd3BhB,KACnB4B,GAAY,GACZ/B,EAAMI,eAAeN,EAAO,EAa1BW,MAAOX,EAASsB,KAAK,UANTN,EAAAA,EAAAA,KAAA,QAAMO,cAZHpB,KACjB8B,GAAY,EAAK,EAW+BhB,SAC3Cf,EAAMF,OAAOE,EAAMF,OAAO,qFAOvB,ECkBd,EA3CqBE,GAEbA,EAAMmC,SAMFC,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EACGD,EAAAA,EAAAA,KAAA,OAAKuB,IAAI,wLAETD,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAoBxB,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAKuB,IAAiC,MAA5BrC,EAAMmC,QAAQK,OAAOC,MAAcC,EAAc1C,EAAMmC,QAAQK,OAAOC,QACtD,OAAzBzC,EAAMmC,QAAQQ,SAAkB,OAAO3C,EAAMmC,QAAQQ,UACtDP,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CAC8B,OAAxBf,EAAMmC,QAAQS,QAAiB,WAAW5C,EAAMmC,QAAQS,SACzD9B,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAC+B,EAAsB,CAAC/C,OAAQE,EAAMF,OAAQM,eAAgBJ,EAAMI,uBAG7EgC,EAAAA,EAAAA,MAAA,OAAArB,SAAA,CAAK,YAEAqB,EAAAA,EAAAA,MAAA,MAAArB,SAAA,CACMf,EAAMmC,QAAQW,SAASC,UAAYjC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,YAAAiC,OAAiBhD,EAAMmC,QAAQW,SAASC,YAA3C,GAChC/C,EAAMmC,QAAQW,SAASG,SAAWnC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,WAAAiC,OAAgBhD,EAAMmC,QAAQW,SAASG,WAA1C,GAC/BjD,EAAMmC,QAAQW,SAASI,IAAMpC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,MAAAiC,OAAWhD,EAAMmC,QAAQW,SAASI,MAArC,GAC1BlD,EAAMmC,QAAQW,SAASK,SAAWrC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,WAAAiC,OAAgBhD,EAAMmC,QAAQW,SAASK,WAA1C,GAC/BnD,EAAMmC,QAAQW,SAASM,WAAatC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,aAAAiC,OAAkBhD,EAAMmC,QAAQW,SAASM,aAA5C,GACjCpD,EAAMmC,QAAQW,SAASO,SAAWvC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,WAAAiC,OAAgBhD,EAAMmC,QAAQW,SAASO,WAA1C,GAC/BrD,EAAMmC,QAAQW,SAASQ,QAAUxC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,UAAAiC,OAAehD,EAAMmC,QAAQW,SAASQ,UAAzC,GAC9BtD,EAAMmC,QAAQW,SAASS,UAAYzC,EAAAA,EAAAA,KAAA,MAAAC,SAAA,YAAAiC,OAAiBhD,EAAMmC,QAAQW,SAASS,YAA3C,gBA3B/CzC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,ICTzB,GAAgB,QAAU,yBAAyB,KAAO,uBCA1D,EAAuB,mBCgBvB,EAfcxD,IAKNoC,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAOxB,SAAA,EACrBD,EAAAA,EAAAA,KAAA,OAAKuB,IAAI,sGAAsGoB,IAAI,MACnH3C,EAAAA,EAAAA,KAAA,QAAAC,SAAOf,EAAM0D,WACbtB,EAAAA,EAAAA,MAAA,KAAArB,SAAA,CAAIf,EAAM2D,UAAU,e,uBCF9B,MA0CMC,EAAWnE,EAAAA,MAAW6B,EAAAA,EAAAA,GAAU,CAAEC,KAAM,YAAlBD,EAVVtB,IAEdoC,EAAAA,EAAAA,MAAA,QAAMyB,SAAU7D,EAAM8D,aAAa/C,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAAC,UACKD,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACE,UAAWqC,EAAAA,GAAWtC,KAAK,WAAWuC,SAAU,CAACC,EAAAA,IAASC,EAAAA,EAAAA,IAAiB,WAEtFpD,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAAA,UAAAC,SAAS,qBAKtB,EA3Cef,IAMX,IAAImE,EAAgB,IAAInE,EAAMJ,MAAMwE,UAAUC,UAAUC,KAAKC,IAC3DzD,EAAAA,EAAAA,KAAC0D,EAAI,CAACd,QAASa,EAAGb,QAAqBC,UAAWY,EAAGZ,WAArBY,EAAGE,MASrC,OAEErC,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAEmC,QAAQ3D,SAAA,EAExBD,EAAAA,EAAAA,KAAA,OAAAC,UAAKD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBACTD,EAAAA,EAAAA,KAAC8C,EAAQ,CAACC,SAZAc,IAEd3E,EAAM4E,QAAQD,EAASE,SAAS,KAW5B/D,EAAAA,EAAAA,KAAA,OAAKwB,UAAWC,EAAEuC,MAAM/D,SACrBoD,MAGD,ECZV,MAEA,GAFwBxC,EAAAA,EAAAA,KAbH/B,IACZ,CACHA,MAAOA,EAAMgC,gBAGKmD,IACf,CAEHH,QAASrE,IACNwE,GAASC,EAAAA,EAAAA,IAAqBzE,GAAM,KAIrBoB,CAA4CsD,GCLpE,EAbiBjF,IAGXoC,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAUxB,SAAA,EAE1BD,EAAAA,EAAAA,KAACoE,EAAW,CAAC/C,QAASnC,EAAMmC,QAASrC,OAAQE,EAAMF,OAAQM,eAAgBJ,EAAMI,kBACjFU,EAAAA,EAAAA,KAACqE,EAAgB,O,kCCGvB,MAAMC,UAAyB3F,EAAAA,UAC5B4F,iBAAAA,GAEC,IAAIC,EAASvF,KAAKC,MAAMuF,OAAOC,OAAOF,OAElCA,IACFA,EAAOvF,KAAKC,MAAMyE,GACda,GACFvF,KAAKC,MAAMyF,QAAQC,KAAK,WAG5B3F,KAAKC,MAAM2F,iBAAiBL,GAC5BvF,KAAKC,MAAM4F,cAAcN,EACzB,CACAzE,MAAAA,GACE,OAAQC,EAAAA,EAAAA,KAAC+E,EAAO,IAAK9F,KAAKC,MAAOmC,QAASpC,KAAKC,MAAMmC,QAASrC,OAAQC,KAAKC,MAAMF,OAAQM,eAAgBL,KAAKC,MAAMI,gBAEtH,EA8BJ,SAAe0F,EAAAA,EAAAA,KACbnE,EAAAA,EAAAA,KAzBmB/B,IAAK,CACxBuC,QAASvC,EAAMgC,YAAYO,QAC3BrC,OAAQF,EAAMgC,YAAYC,WAC1B4C,GAAI7E,EAAMmG,KAAKtB,GACfuB,OAAOpG,EAAMmG,KAAKC,UAqBM,CAACL,iBAAgB,KAACC,cAAa,KAACxF,eAAc,QAlBxE,SAAoB6F,GAalB,OAZA,SAAiCjG,GAC7B,IAAIkG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXb,GAASc,EAAAA,EAAAA,MACb,OACIxF,EAAAA,EAAAA,KAACmF,EAAS,IACFjG,EACJuF,OAAQ,CAAEW,WAAUE,WAAUZ,WAG1C,CAGF,GAMEe,EAAAA,EAHF,CAIEnB,E,6FCzCK,MAAMrB,EAASyC,IAA0B,IAAzB,MAACC,EAAK,KAACC,KAAQ1G,GAAMwG,EACxC,MAAMG,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OAAOzE,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAAA,EAAEuE,iBAAY,KAAMH,GAAYpE,EAAAA,EAAEsE,OAAO9F,SAAA,EACpDD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,eAAc2F,KAAWzG,MAE5B2G,IAAW7F,EAAAA,EAAAA,KAAA,QAAAC,SAAO2F,EAAKG,UAC9B,EAEGE,EAAMC,IAA0B,IAAzB,MAACP,EAAK,KAACC,KAAQ1G,GAAMgH,EACrC,MAAML,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OAAOzE,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAAA,EAAEuE,iBAAY,KAAMH,GAAYpE,EAAAA,EAAEsE,OAAO9F,SAAA,EACpDD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,YAAW2F,KAAWzG,MAEzB2G,IAAW7F,EAAAA,EAAAA,KAAA,QAAAC,SAAO2F,EAAKG,UAC9B,EAEGI,EAAW,SAACxF,EAAKyF,EAAYxF,EAAUsC,GAAQ,IAAChE,EAAKL,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAC,CAAC,EAAEY,EAAIZ,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAC,GAAE,OAAGyC,EAAAA,EAAAA,MAAA,OAAArB,SAAA,EAC5ED,EAAAA,EAAAA,KAACU,EAAAA,EAAK,CAACC,KAAMA,EAAMyF,YAAaA,EAC/BxF,UAAWA,EAAWsC,SAAUA,KAAchE,IAAUO,IACvD,C,qDC5CC,MAAM0D,EAAUxD,IACnB,IAAGA,EACH,MAAO,mBAAmB,EAQjByD,EAAkBmD,GAAa5G,IACxC,GAAGA,GAAQA,EAAM0G,OAAOE,EAAW,MAAM,cAANrE,OAAqBqE,EACxC,EAEPC,EAAkBC,GAAa9G,IACxC,GAAGA,GAAQA,EAAM0G,OAAOI,EAAW,MAAM,cAANvE,OAAqBuE,EACxC,C,kCCfpB,SAAgB,YAAc,kCAAkC,mBAAc,uCAAkC,MAAQ,4BAA4B,aAAe,mC","sources":["webpack://react-kabzda-2/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-2/./src/components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css?a7c9","components/Profile/MyPosts/ProfileInfo/ProfileStatus.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusContainer.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-2/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-2/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/formsControl/formsControl.js","utils/validator/validator.js","webpack://react-kabzda-2/./src/components/common/formsControl/formsControl.module.css?eeb5"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__IU+n2\",\"item\":\"Profile_item__ejbm-\"};","// extracted by mini-css-extract-plugin\nexport default {\"description_block\":\"ProfileInfo_description_block__8mNr5\",\"item\":\"ProfileInfo_item__PnUmG\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass ProfileStatus extends React.Component{\r\n    //newStatus = React.createRef();\r\n    //локальний стейт для компоненті\r\n    state={\r\n        editMode:false,\r\n        status:this.props.status\r\n    }\r\n    activateMode(){\r\n        \r\n      this.setState({\r\n        editMode:true\r\n      })  \r\n    }\r\n    deActivateMode(){\r\n        \r\n        this.setState({\r\n          editMode:false\r\n        })  \r\n        this.props.updateStatusTC(this.state.status);\r\n      }\r\n      onChangeStatus(e){\r\n        let text = e.currentTarget.value;// вместо ref\r\n        this.setState({\r\n            status:text\r\n\r\n          })  \r\n        //this.props.onChangeStatusAC(text)//redux автоматично делает callback\r\n      }\r\n    componentDidUpdate(PrevProps,PrevState){\r\n        if(PrevProps.status !== this.props.status){\r\n            this.setState({\r\n                status:this.props.status\r\n    \r\n              })\r\n        }\r\n    }\r\n    render(){\r\n        return <div >\r\n        {!this.state.editMode ?<span onDoubleClick={this.activateMode.bind(this)}>{this.props.status?this.props.status:\"Введіть статус\"}</span>\r\n\r\n\r\n        :<input autoFocus  onChange={this.onChangeStatus.bind(this)} onBlur={this.deActivateMode.bind(this)} value={this.state.status} type=\"text\" />}\r\n        \r\n        </div>\r\n    }\r\n}\r\n\r\nconst ProfileStatusF=(props)=>{\r\n    return(\r\n        <Field autoFocus onBlur={props.deActivateMode}\r\n         name={'statusInput'} component={'input'} />\r\n    )\r\n}\r\nconst ProfileStatusRF=reduxForm({form:'statusForm'})(ProfileStatusF);\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport { onChangeStatusAC } from \"../../../../redux/profile_reducer\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return {\r\n    status:state.profilePage.statusText\r\n  }\r\n   \r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n  onChangeStatusAC})(ProfileStatus);","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n;\r\nconst ProfileStatusWithHooks =(props)=>{\r\n    //let stateWithSetState = useState(true);\r\n    //let editMode=stateWithSetState[0];\r\n    //let setEditMode=stateWithSetState[1];\r\n    let [editMode,setEditMode]=useState(false)\r\n    let [status,setStatus]=useState(props.status)\r\n    useEffect(()=>{\r\n      setStatus(props.status)\r\n    },[props.status])\r\n    const activateMode=()=>{\r\n      setEditMode(true)\r\n    }\r\n    const deActivateMode=()=>{\r\n      setEditMode(false)\r\n      props.updateStatusTC(status);\r\n    }\r\n    const onChangeStatus=(e)=>{\r\n      setStatus(e.currentTarget.value)\r\n      \r\n    }\r\n        return <div >\r\n        { !editMode?<span onDoubleClick={activateMode} >\r\n          {props.status?props.status:\"Введіть статус\"}\r\n          </span>\r\n\r\n\r\n        :<input autoFocus onChange={onChangeStatus} onBlur={deActivateMode} \r\n        value={status}  type=\"text\" />}\r\n        \r\n        </div>\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport c from'./ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\nimport defaultIcon from \"./../../../../img/defaultIcon.png\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusContainer from \"./ProfileStatusContainer\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = (props) =>{\r\n    \r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    else{\r\n        return(\r\n      \r\n            <div>\r\n               <img src='https://img.freepik.com/free-photo/landscape-of-morning-fog-and-mountains-with-hot-air-balloons-at-sunrise_335224-794.jpg?size=626&ext=jpg&ga=GA1.1.1546980028.1703721600&semt=sph'  />\r\n           \r\n               <div className={c.description_block}>\r\n                   <img src={props.profile.photos.large==null ? defaultIcon : props.profile.photos.large}/>\r\n                   {props.profile.fullName===null ? 'Name':props.profile.fullName}\r\n                   <div>\r\n                        {props.profile.aboutMe===null ? 'About me':props.profile.aboutMe}\r\n                        <div>\r\n                            <ProfileStatusWithHooks status={props.status} updateStatusTC={props.updateStatusTC} />\r\n                        </div>\r\n                   </div>\r\n                   <div>\r\n                        Contacts\r\n                        <ul>\r\n                            {!props.profile.contacts.facebook?'':<li>{`Facebook:${props.profile.contacts.facebook}`}</li>}\r\n                            {!props.profile.contacts.website?'':<li>{`Website:${props.profile.contacts.website}`}</li>}\r\n                            {!props.profile.contacts.vk?'':<li>{`vk:${props.profile.contacts.vk}`}</li>}\r\n                            {!props.profile.contacts.twitter?'':<li>{`Twitter:${props.profile.contacts.twitter}`}</li>}\r\n                            {!props.profile.contacts.instagram?'':<li>{`Instagram:${props.profile.contacts.instagram}`}</li>}\r\n                            {!props.profile.contacts.youtube?'':<li>{`Youtube:${props.profile.contacts.youtube}`}</li>}\r\n                            {!props.profile.contacts.github?'':<li>{`Github:${props.profile.contacts.github}`}</li>}\r\n                            {!props.profile.contacts.mainLink?'':<li>{`MainLink:${props.profile.contacts.mainLink}`}</li>}\r\n                        </ul>\r\n                   </div>\r\n               </div>\r\n            </div>\r\n           \r\n   \r\n         \r\n       \r\n       );\r\n    }\r\n    \r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__2T5Mh\",\"item\":\"MyPosts_item__flEDv\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__9DbPL\"};","import React from \"react\";\r\nimport c from'./Post.module.css';\r\nconst Post = (props) =>{\r\n    return(\r\n      \r\n         \r\n      \r\n        <div className={c.item}>\r\n          <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQg8gaNRMVq9hltpqT_lMVJ7AfWUaUMXl_Yig&usqp=CAU\" alt=\"\" />\r\n          <span>{props.message}</span>\r\n          <p>{props.likeCount} LIKES</p>\r\n          </div>\r\n\r\n      \r\n    \r\n    );\r\n}\r\nexport default Post;","import React, { Component, PureComponent } from \"react\";\r\nimport c from'./MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { PostChangeActionCreator, addPostActionCreator } from \"../../../redux/profile_reducer\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, minLengthCreator, required } from \"../../../utils/validator/validator\";\r\nimport { TextArea } from \"../../common/formsControl/formsControl\";\r\n\r\nconst MyPosts=(props)=>{\r\n  /*shouldComponentUpdate(nextProps, nextState) {\r\n    \r\n    return this.props.value !== nextProps.value //|| this.state !== nextState; \r\n   }*/\r\n\r\n    let postsElements = [...props.state.postData].reverse().map((el) => (\r\n      <Post message={el.message} key={el.id} likeCount={el.likeCount} />\r\n    ));\r\n    let addPost =(formData)=>{\r\n    //console.log(formData.postText);\r\n    props.addPost(formData.postText)\r\n\r\n//props.changeInput('');\r\n}\r\n  let newPostElement=React.createRef();\r\n    return(\r\n      \r\n      <div className={c.content}>\r\n      \r\n        <div><h3>My posts</h3></div>\r\n        <MyPostRF onSubmit={addPost}/>\r\n        <div className={c.posts}>\r\n          {postsElements}\r\n        </div>\r\n      \r\n    </div>\r\n    \r\n    );\r\n  }\r\n \r\n\r\nconst MyPostForm=(props)=>{\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n       <div>\r\n            <Field component={TextArea}  name=\"postText\" validate={[required,maxLengthCreator(120),]}/>\r\n        </div>\r\n        <div><button >Add post</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst MyPostRF = React.memo(reduxForm({ form: 'postForm' })(MyPostForm));\r\nexport default MyPosts;","import React from \"react\";\r\nimport c from'./MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport { PostChangeActionCreator, addPostActionCreator } from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n   return{\r\n      state: state.profilePage,\r\n   }\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n   return{\r\n     \r\n      addPost:(text) => {\r\n         dispatch(addPostActionCreator(text))\r\n      },\r\n   }\r\n}\r\nconst MyPostsContainer= connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport c from'./Profile.module.css';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nconst Profile = (props) =>{\r\n  \r\n    return(\r\n      <div className={c.content}>\r\n      \r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatusTC={props.updateStatusTC}/>\r\n      <MyPostsContainer />\r\n      \r\n    </div>\r\n    \r\n    );\r\n    \r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfileTC, onSetStatusAC, onSetStatusTC, updateStatusTC } from \"../../redux/profile_reducer\";\r\nimport {\r\n  Navigate,\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n   componentDidMount(){\r\n    \r\n    let userId = this.props.router.params.userId;\r\n    //let userId = 20000;\r\n    if(!userId ){\r\n      userId=this.props.id;\r\n      if(!userId){\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfileTC(userId)\r\n    this.props.onSetStatusTC(userId);\r\n    }\r\n    render(){\r\n      return  <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatusTC={this.props.updateStatusTC}/>\r\n      \r\n    }\r\n      \r\n    \r\n    \r\n}\r\n\r\nlet mapStateToProps=(state)=>({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.statusText,\r\n  id: state.auth.id,\r\n  isAuth:state.auth.isAuth\r\n});\r\n//снизу работает как withRouter\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n          <Component\r\n              {...props}\r\n              router={{ location, navigate, params }}\r\n          />\r\n      );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,{getUserProfileTC,onSetStatusTC,updateStatusTC}),\r\n  withRouter,\r\n  withAuthRedirect,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport c from './formsControl.module.css'\r\nimport { Field } from \"redux-form\";\r\n\r\n\r\n/*\r\nexport const FormController=({input,meta,child,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={c.formСontrol+' '+ (hasError && c.error)}>\r\n                <div> \r\n                    <props.element {...input} {...props}/>\r\n                </div>\r\n                {hasError&& <span>{meta.error}</span>}\r\n    </div>\r\n}\r\n\r\nexport const TextArea=({...props})=>{\r\n    return <FormController {...props} element=\"textarea\"></FormController>\r\n}\r\nexport const Input=({meta,...props})=>{\r\n    return <FormController {...props} element=\"input\"></FormController>\r\n}\r\n*/\r\nexport const TextArea=({input,meta,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={c.formСontrol+' '+ (hasError && c.error)}>\r\n                <div>\r\n                    <textarea {...input} {...props}/>   \r\n                </div>\r\n                {hasError&& <span>{meta.error}</span>}\r\n    </div>\r\n}\r\nexport const Input=({input,meta,...props})=>{\r\n    const hasError = meta.touched && meta.error;\r\n    return <div className={c.formСontrol+' '+ (hasError && c.error)}>\r\n                <div>\r\n                    <input {...input} {...props}/>   \r\n                </div>\r\n                {hasError&& <span>{meta.error}</span>}\r\n    </div>\r\n}\r\nexport const CreateForm=(name,placeholder,component,validate,props={},text='')=><div>\r\n    <Field name={name} placeholder={placeholder}\r\n     component={component} validate={validate} {...props} />{text}\r\n</div>","export const required= value =>{\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n/*\r\nexport const maxLength30=value=>{\r\n    if(value&& value.length>30) return \"Max simvol 30\";\r\n    return undefined\r\n}\r\n*/\r\nexport const maxLengthCreator=(maxLength)=>(value)=>{\r\n    if(value&& value.length>maxLength) return `Max symbol ${maxLength}`;\r\n    return undefined\r\n}\r\nexport const minLengthCreator=(minLength)=>(value)=>{\r\n    if(value&& value.length<minLength) return `Min symbol ${minLength}`;\r\n    return undefined\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"formsControl_formControl__8tjrF\",\"formСontrol\":\"formsControl_formСontrol__HovIe\",\"error\":\"formsControl_error__aNckz\",\"formErrorDiv\":\"formsControl_formErrorDiv__V0-P4\"};"],"names":["ProfileStatus","React","constructor","arguments","state","editMode","status","this","props","activateMode","setState","deActivateMode","updateStatusTC","onChangeStatus","e","text","currentTarget","value","componentDidUpdate","PrevProps","PrevState","render","_jsx","children","autoFocus","onChange","bind","onBlur","type","onDoubleClick","reduxForm","form","Field","name","component","connect","profilePage","statusText","onChangeStatusAC","setEditMode","useState","setStatus","useEffect","profile","_jsxs","src","className","c","photos","large","defaultIcon","fullName","aboutMe","ProfileStatusWithHooks","contacts","facebook","concat","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","alt","message","likeCount","MyPostRF","onSubmit","handleSubmit","TextArea","validate","required","maxLengthCreator","postsElements","postData","reverse","map","el","Post","id","content","formData","addPost","postText","posts","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","router","params","history","push","getUserProfileTC","onSetStatusTC","Profile","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","_ref","input","meta","hasError","touched","error","formСontrol","Input","_ref2","CreateForm","placeholder","length","undefined","maxLength","minLengthCreator","minLength"],"sourceRoot":""}